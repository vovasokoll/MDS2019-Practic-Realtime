version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
    - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
    - checkout
    - restore_cache:
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    - run:
        name: Run Tests
        command: ./gradlew lint tes
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/reports
        destination: reports
    - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
        path: app/build/test-results
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
    - run:
        name: Build
        command: ./gradlew assembleRelease
    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: app/build/outputs/apk
        destination: release
    - deploy:
        name: Deploy APK.
        command: |
          if [ "${CIRCLE_BRANCH}" != "master" ]; then
            bash ./scripts/deploy-fabric.sh
          fi
  test:
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    steps:
      - run:
        command: |
          echo $(circleci tests glob "foo/**/*" "bar/**/*")
          circleci tests glob "foo/**/*" "bar/**/*" | xargs -n 1 echo
  workflows:
    version: 2
    build_and_test:
      jobs:
      - build
      - test
    steps:
    - restore_cache: # Restores the cached dependency.
        key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
